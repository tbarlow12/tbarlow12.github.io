{"version":3,"sources":["content sync /^/.//.*/.json$","react/pages/defaultPage.tsx","react/components/codeBlock.tsx","react/components/markdown.tsx","react/manifest.ts","scss/icons.tsx","services/blogService.ts","react/components/blog/blogPostPreview.tsx","react/pages/blogPage.tsx","react/pages/blogPostPage.tsx","react/createManifest.ts","react/components/shell/mainContentRouter.tsx","react/components/shell/sidebar.tsx","services/pathService.ts","react/components/shell/terminal/terminal.tsx","react/components/shell/header.tsx","react/App.tsx","serviceWorker.ts","index.tsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","PageType","CodeBlock","props","language","style","darcula","value","Markdown","source","content","linkTarget","escapeHtml","renderers","DefaultPage","pageType","name","beforeContent","afterContent","pageJson","require","className","Manifest","options","parent","children","component","this","PAGE","addChildren","exact","nonExact","path","substr","indexOf","childOptions","child","push","icons","md5","BlogService","getBlogPosts","postsPreviews","blogPost","data","update","title","digest","blogPostId","postsFull","posts","sort","a","b","Date","date","BlogPostPreview","thumbnail","src","alt","to","toDateString","preview","BlogPage","getPreviews","BlogPostPage","pageProps","match","location","pathname","getFullPost","appManifest","icon","postName","MainContentRouter","getRoutes","Set","manifest","routes","paths","has","getPath","add","route","getExact","getComponent","getChildren","Sidebar","navLinks","getOptions","externalLinks","link","tools","action","toggleTerminal","item","href","target","rel","onClick","PathService","targetPath","getManifest","getName","join","err","replace","startsWith","currentSplit","split","targetSplit","concat","currentManifest","getParent","find","c","MyTerminal","structureService","commands","echo","description","usage","fn","bind","ls","cd","kill","closeTerminal","state","open","setState","welcomeMessage","promptLabel","promptLabelStyle","color","noHistory","styles","maxHeight","arguments","Array","from","transformPath","history","React","Component","TerminalWithRouter","withRouter","Header","App","useState","isMobile","terminalOpen","setTerminalOpen","darkTheme","setDarkTheme","toggleTheme","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.58b4b9e7.chunk.js","sourcesContent":["var map = {\n\t\"./blog/posts-full.json\": 30,\n\t\"./blog/posts-preview.json\": 50,\n\t\"./pages/books.json\": 379,\n\t\"./pages/home.json\": 380,\n\t\"./pages/interests.json\": 381,\n\t\"./pages/projects.json\": 382,\n\t\"./pages/resume.json\": 383\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 378;","import React from \"react\";\nimport { Markdown } from \"../components/markdown\";\n\nexport enum PageType {\n  PAGE = \"pages\",\n  BLOG = \"blog/posts\"\n}\n\nexport function DefaultPage (pageType: PageType, name: string, beforeContent?: any, afterContent?: any) {\n  return () => {\n    const pageJson = require(`../../content/${pageType}/${name}.json`);\n    return (\n      <div className={`app-page-${name}`}>\n        {beforeContent}\n        <Markdown\n          content={pageJson.content}\n        />\n        {afterContent}\n      </div>\n    );\n  }\n}","import React from \"react\";\nimport { Prism } from \"react-syntax-highlighter\";\nimport { darcula } from \"react-syntax-highlighter/dist/esm/styles/prism\";\n\nexport interface CodeBlockProps {\n  language: string;\n  value: string;\n}\n\nexport function CodeBlock(props: CodeBlockProps) {\n  return (\n    <Prism language={props.language} style={darcula}>\n      {props.value}\n    </Prism>\n  ) \n}\n","import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport { CodeBlock } from \"./codeBlock\"\n\nexport interface MarkdownProps {\n  content: string;\n  language?: string;\n}\n\n\n\nexport function Markdown(props: MarkdownProps) {\n  return (\n    <ReactMarkdown\n      source={props.content}\n      linkTarget=\"_blank\"\n      escapeHtml={false}\n      renderers={{ code: CodeBlock }}\n    />\n  )\n}","import { DefaultPage, PageType } from \"./pages/defaultPage\";\n\nexport interface ManifestOptions {\n  title: string;\n  name: string;\n  path: string;\n  icon: string;\n  pageType?: PageType;\n  beforeContent?: any;\n  afterContent?: any;\n  nonExact?: boolean;\n  component?: (...args: any[]) => any;\n  children?: ManifestOptions[];\n}\n\nexport class Manifest {\n  private children: Manifest[];\n\n  public constructor (private options: ManifestOptions, private parent?: Manifest) {\n    if (!options.component) {\n      this.options.component = DefaultPage(\n        options.pageType || PageType.PAGE,\n        options.name,\n        options.beforeContent,\n        options.afterContent  \n      );\n    }\n    this.children = [];\n    if (options.children) {\n      this.addChildren(options.children);\n    }\n  }\n\n  public getOptions(): ManifestOptions {\n    return this.options;\n  }\n\n  public getName(): string {\n    return this.options.name;\n  }\n\n  public getPath(exact: boolean = false): string {\n    if (exact && this.options.nonExact) {\n      debugger;\n      const { path, name } = this.options;\n      return path.substr(0, path.indexOf(\":\")) + name\n    }\n    return this.options.path;\n  }\n\n  public getExact(): boolean {\n    return !this.options.nonExact;\n  }\n\n  public getComponent() {\n    return this.options.component;\n  }\n\n  public getParent(): Manifest {\n    return this.parent;\n  }\n\n  public getChildren(): Manifest[] {\n    return this.children;\n  }\n\n  private addChildren(childOptions: ManifestOptions[]) {\n    for (const child of childOptions) {\n      this.children.push(new Manifest(child, this))\n    }\n  }\n}","export const icons = {\n  home: \"fas fa-home\",\n  blog: \"fas fa-keyboard\",\n  github: \"fab fa-github\",\n  linkedin: \"fab fa-linkedin\",\n  resume: \"fas fa-file-alt\",\n  tasks: \"fas fa-tasks\",\n  code: \"fas fa-code-branch\",\n  education: \"fas fa-user-graduate\",\n  basketball: \"fas fa-basketball-ball\",\n  volunteer: \"fas fa-hands-helping\",\n  terminal: \"fas fa-terminal\",\n  sun: \"fas fa-sun\",\n  moon: \"fas fa-moon\",\n  trash: \"far fa-trash-alt\",\n  book: \"fas fa-book\",\n  none: \"\",\n}","\nimport postsFull from \"../content/blog/posts-full.json\";\nimport postsPreviews from \"../content/blog/posts-preview.json\";\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { BlogPostMetadata } from \"../models/blog\";\nconst md5 = require(\"md5.js\");\n\nexport class BlogService {\n  \n  public static getPreviews() {\n    return this.getBlogPosts(postsPreviews);\n  }\n\n  public static getBlogPostPath(blogPost: BlogPostMetadata) {\n    if (blogPost.data.path) {\n      return blogPost.data.path;\n    }\n    return new md5().update(blogPost.data.title).digest(\"hex\").substr(0, 8);\n  }\n\n  public static getFullPost(blogPostId: string) {\n    return (postsFull as { [id: string]: BlogPostMetadata })[blogPostId];\n  }\n\n  private static getBlogPosts(posts: BlogPostMetadata[]): BlogPostMetadata[] {\n    return posts\n      .sort((a, b) =>\n        (new Date(a.data.date) < new Date(b.data.date)) ? 1 : -1\n      );\n  }\n}","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { BlogPostMetadata } from \"../../../models/blog\";\nimport { Markdown } from \"../markdown\";\n\nexport function BlogPostPreview(blogPost: BlogPostMetadata) {\n\n  return (\n    <div className=\"blog-post-preview\">\n      {blogPost.data.thumbnail &&\n      <div className=\"blog-post-preview-thumbnail\">\n        <img src={`/content/images/${blogPost.data.thumbnail}`} alt=\"\"></img>\n      </div>}\n      <div className=\"blog-post-preview-title\">\n        <NavLink title={blogPost.data.title} to={`/blog/${blogPost.data.path}`} >{blogPost.data.title}</NavLink>\n      </div>\n      <div>{new Date(blogPost.data.date).toDateString()}</div>\n      <div>{blogPost.data.preview}</div>\n      <div className=\"blog-post-preview-content\">\n        <Markdown \n          content={blogPost.content}\n        />\n      </div>\n    </div>\n  )\n}","import React from \"react\";\nimport { BlogService } from \"../../services/blogService\";\nimport { BlogPostPreview } from \"../components/blog/blogPostPreview\";\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { BlogPostMetadata } from \"../../models/blog\";\n\nexport function BlogPage() {\n\n  return (\n    <div className=\"blog-page\">\n      <h1>Blog</h1>\n      {BlogService.getPreviews().map((blogPost: BlogPostMetadata) => \n        <div className=\"blog-page-preview\">\n          {BlogPostPreview(blogPost)}\n        </div>)}\n    </div>\n  )\n}\n\n\n","import React from \"react\";\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { PageProps } from \"../../models/generic\";\nimport { BlogService } from \"../../services/blogService\";\nimport { Markdown } from \"../components/markdown\";\n\nexport function BlogPostPage(pageProps: PageProps) {\n  const match = pageProps.location.pathname.match(/blog\\/(.*)/);\n  let blogPostId: string;\n  if (match) {\n    blogPostId = match[1];\n  } else {\n    throw new Error(\"Invalid URL\");\n  }\n  const blogPost = BlogService.getFullPost(blogPostId);\n  return (\n    <div className=\"blog-post-page\">\n      <div className=\"blog-post-page-title\">\n        <h1>{blogPost.data.title}</h1>\n      </div>\n      <div className=\"blog-post-page-date\">\n        <h4>{new Date(blogPost.data.date).toDateString()}</h4>\n      </div>\n      {\n        blogPost.data.preview &&\n        <div className=\"blog-post-page-preview\">\n          {blogPost.data.preview}\n        </div>\n      }\n      <div>{blogPost.data.preview}</div>\n      <div className=\"blog-post-page-content\">\n        <Markdown \n          content={blogPost.content}\n        />\n      </div>\n    </div>\n  )\n}","// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { Manifest, ManifestOptions } from \"./manifest\";\nimport { icons } from \"../scss/icons\"\nimport { BlogPage } from \"./pages/blogPage\"\nimport { BlogPostPage } from \"./pages/blogPostPage\";\nimport postsFull from \"../content/blog/posts-full.json\";\n\nexport const appManifest = createManifest();\n\nfunction createManifest(): Manifest {\n  const manifest = new Manifest({\n    title: \"About Me\",\n    name: \"home\",\n    path: \"/\",\n    icon: icons.home,\n    children: [\n      {\n        title: \"Blog\",\n        name: \"blog\",\n        path: \"/blog\",\n        icon: icons.blog,\n        component: BlogPage,\n        children: Object.keys(postsFull).map((postName) => {\n          const options: ManifestOptions = {\n            title: \"Blog Post\",\n            name: postName,\n            path: \"/blog/:blogPost\",\n            component: BlogPostPage,\n            icon: icons.none,\n            nonExact: true\n          }\n          return options;\n        })\n      },\n      {\n        title: \"Projects\",\n        name: \"projects\",\n        path: \"/projects\",\n        icon: icons.code,\n      },\n      {\n        title: \"Resume\",\n        name: \"resume\",\n        path: \"/resume\",\n        icon: icons.resume\n      },\n      {\n        title: \"Interests\",\n        name: \"interests\",\n        path: \"/interests\",\n        icon: icons.basketball\n      },\n      {\n        title: \"Books\",\n        name: \"books\",\n        path: \"/books\",\n        icon: icons.book\n      }\n    ]\n  });\n\n  return manifest;\n}","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { appManifest } from \"../../createManifest\";\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { Manifest } from \"../../manifest\";\nimport { DefaultPage, PageType } from \"../../pages/defaultPage\";\n\nexport default function MainContentRouter() {\n  return (\n    <div className=\"app-main-content\">\n      <Switch>\n        {getRoutes(appManifest, [], new Set())}\n        <Route component={DefaultPage(PageType.PAGE, \"home\")} />\n      </Switch>\n    </div>\n  )\n}\n\nfunction getRoutes(manifest: Manifest, routes: any[], paths: Set<string>) {\n  if (paths.has(manifest.getPath())) {\n    return;\n  }\n  paths.add(manifest.getPath());\n  const route = (manifest.getExact())\n    ?\n    <Route path={manifest.getPath()} exact component={manifest.getComponent()} />\n    :\n    <Route path={manifest.getPath()} component={manifest.getComponent()} />\n  routes.push(route);\n  for (const child of manifest.getChildren()) {\n    getRoutes(child, routes, paths)\n  }\n  return routes;\n}","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { icons } from \"../../../scss/icons\";\nimport { appManifest } from \"../../createManifest\";\n\n\nexport interface SidebarProps {\n  toggleTerminal: () => void;\n  toggleTheme: () => void;\n  darkTheme: boolean;\n}\n\nexport interface SidebarItem {\n  title: string;\n  icon: string;\n}\n\nexport interface SidebarNavLink extends SidebarItem {\n  path: string;\n}\n\nexport interface SidebarExternalLink extends SidebarItem {\n  link: string;\n}\n\nexport interface SidebarTool extends SidebarItem {\n  action: () => void;\n}\n\n\nexport function Sidebar(props: SidebarProps) {\n\n  const navLinks: SidebarNavLink[] = [\n    appManifest.getOptions(),\n    ...appManifest.getChildren().map((child) => child.getOptions())\n  ]\n\n  const externalLinks: SidebarExternalLink[] = [\n    {\n      title: \"GitHub\",\n      link: \"https://github.com/tbarlow12\",\n      icon: icons.github\n    },\n    {\n      title: \"LinkedIn\",\n      link: \"https://www.linkedin.com/in/tannerbarlow/\",\n      icon: icons.linkedin\n    },\n  ]\n\n  const tools: SidebarTool[] = [\n    {\n      title: \"Terminal\",\n      icon: icons.terminal,\n      action: props.toggleTerminal\n    }\n  ]\n\n  // if (props.darkTheme) {\n  //   tools.push({\n  //     name: \"Light Theme\",\n  //     icon: icons.sun,\n  //     action: props.toggleTheme\n  //   })\n  // } else {\n  //   tools.push({\n  //     name: \"Dark Theme\",\n  //     icon: icons.moon,\n  //     action: props.toggleTheme\n  //   })\n  // }\n\n  return (\n    <ul className=\"app-sidebar\">\n      <div className=\"app-sidebar-links\">\n        {navLinks.map((item) =>\n          <li className=\"app-sidebar-item\">\n            <NavLink to={item.path}>\n              <i className={`app-sidebar-item-icon ${item.icon}`}></i>\n            </NavLink>\n          </li>)\n        }\n        {externalLinks.map((item) =>\n          <li className=\"app-sidebar-item\">\n            <a href={item.link} target=\"_blank\" rel=\"noopener noreferrer\">\n              <i className={`app-sidebar-item-icon ${item.icon}`}></i>\n            </a>\n          </li>)\n        }\n      </div>\n      <div className=\"app-sidebar-tools\">\n        {tools.map((item) =>\n          <li className=\"app-sidebar-item\" onClick={() => item.action()}>\n            <i className={`app-sidebar-item-icon ${item.icon}`}></i>\n          </li>)\n        }\n      </div>      \n    </ul>\n  )\n}","import { appManifest } from \"../react/createManifest\";\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { Manifest } from \"../react/manifest\";\n\nexport class PathService {\n\n  private manifest: Manifest;\n\n  public constructor() {\n    this.manifest = appManifest;\n  }\n\n  public ls(pathname: string, targetPath?: string): string {\n    try {\n      const manifest = this.getManifest(pathname, targetPath);\n      return manifest.getChildren().map((child) => child.getName()).join(\" \")\n    } catch (err) {\n      return `Invalid command ${err}`;\n    }\n  }\n\n  public transformPath(pathname: string, targetPath: string): string {\n    const manifest = this.getManifest(pathname, targetPath);\n    return manifest.getPath(true).replace(\"//\", \"/\");\n  }\n\n  private getManifest(pathname: string, targetPath?: string) {\n    if (targetPath === \"~\") {\n      return this.manifest;\n    }\n    if (targetPath && targetPath.startsWith(\"~/\")) {\n      pathname = \"\";\n      targetPath = targetPath.substr(2);\n    }\n    let currentSplit = pathname.split(\"/\");\n    const targetSplit = (targetPath) ? targetPath.split(\"/\") : []\n    \n    currentSplit = currentSplit.concat(targetSplit);\n\n    let currentManifest = this.manifest;\n\n    for (const path of currentSplit) {\n      if (path === \"..\") {\n        if (!currentManifest.getParent()) {\n          throw new Error(`Invalid path: ${pathname + targetPath}`);\n        }\n        currentManifest = currentManifest.getParent();\n      }\n      const child = currentManifest.getChildren()\n        .find((c) => c.getName() === path);\n      if (child) {\n        currentManifest = child;\n      }\n    }\n    return currentManifest;\n  }\n}\n","import React from \"react\";\nimport Terminal from \"react-console-emulator\";\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { RouteComponentProps, withRouter } from \"react-router\";\nimport { PathService } from \"../../../../services/pathService\";\nimport { icons } from \"../../../../scss/icons\";\n\nexport interface MyTerminalProps extends RouteComponentProps {\n  open: boolean;\n  closeTerminal: () => void;\n}\n\nexport interface MyTerminalState {\n  open: boolean;\n}\n\nexport default class MyTerminal extends React.Component<MyTerminalProps, MyTerminalState> {\n\n  private structureService: PathService;\n\n  public constructor(props: MyTerminalProps) {\n    super(props);\n    this.structureService = new PathService();\n    this.state = {\n      open: props.open\n    }\n  }\n\n  public componentDidUpdate() {\n    if (this.props.open !== this.state.open) {\n      this.setState({\n        open: this.props.open\n      })\n    }\n  }\n\n  commands = {\n    echo: {\n      description: \"Echo a passed string.\",\n      usage: \"echo <string>\",\n      fn: this.echo.bind(this)\n    },\n    ls: {\n      description: \"View available navigation options\",\n      usage: \"ls\",\n      fn: this.ls.bind(this)\n    },\n    cd: {\n      description: \"Navigate to another page\",\n      usage: \"cd <string>\",\n      fn: this.cd.bind(this)\n    },\n    kill: {\n      description: \"Close terminal\",\n      usage: \"kill\",\n      fn: this.props.closeTerminal,\n    }\n  }\n\n  render () {\n\n    const { location } = this.props;\n    \n    return (\n      <div className=\"app-main-footer\">\n        {this.props.open && <div className=\"app-main-footer-container\">\n          <div className=\"app-main-footer-header\">\n            <div className=\"app-main-footer-header-tabs\">\n              <div className=\"app-main-footer-header-tabs-title\">TERMINAL</div>\n            </div>\n            <div className=\"app-main-footer-header-tools\">\n              <div className=\"app-main-footer-header-tools-trash\">\n                <i className={`${icons.trash}`} onClick={this.props.closeTerminal}></i>\n              </div>\n            </div>\n          </div>\n          <Terminal\n            commands={this.commands}\n            welcomeMessage={\"Run 'help' for available commands, 'kill' to close\"}\n            promptLabel={`user@TBarlow:${this.getPath(location.pathname)}`}\n            promptLabelStyle={{color: \"#66CCCC\"}}\n            noHistory={true}\n            styles={{\n              maxHeight: \"300px\",\n            }}\n          />\n        </div>}        \n      </div>\n    )\n  }\n\n  ls() {\n    const { pathname } = this.props.location;\n    const target = arguments[0];\n    return this.structureService.ls(pathname, target);\n  }\n\n  echo() {\n    return `${Array.from(arguments).join(\" \")}`\n  }\n\n  cd () {\n    const target = arguments[0];\n    const location = this.props.location;\n    try {\n      const path = this.structureService.transformPath(location.pathname, target);\n      this.props.history.push(path)\n    } catch {\n      return `Invalid path: ${location.pathname + target}`\n    }\n  }\n\n  getPath = (pathname: string) => {\n    if (pathname === \"/\") {\n      return \"~\"\n    }\n    return `~${pathname}`;\n  }\n}\n\nexport const TerminalWithRouter = withRouter(MyTerminal);","import React from \"react\";\n\nexport function Header() {\n  return (\n    <div className=\"app-main-header\">\n      {/* <div className=\"icon\">\n        <a href=\"/\">\n          <img src=\"/resources/images/TannerPic.jpg\" alt=\"\"/>\n        </a>\n      </div> */}\n      <div className=\"app-main-header-title\">\n        <h1>Tanner Barlow</h1>\n      </div>\n      <div className=\"app-main-header-subtitle\"></div>\n    </div>\n  )\n}","import React, { useState } from 'react';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport '../scss/App.css';\nimport \"../scss/App.scss\";\nimport MainContentRouter from \"./components/shell/mainContentRouter\";\nimport { Sidebar } from \"./components/shell/sidebar\";\nimport { TerminalWithRouter } from './components/shell/terminal/terminal';\nimport { isMobile } from \"react-device-detect\"\nimport { Header } from './components/shell/header';\n\nconst App: React.FC = () => {\n  \n  const [terminalOpen, setTerminalOpen] = useState(!isMobile)\n  const [darkTheme, setDarkTheme] = useState(true);\n\n  return (\n      <div className={`app`}>\n        <Router>\n            <Sidebar\n              toggleTerminal={() => setTerminalOpen(!terminalOpen)}\n              toggleTheme={() => setDarkTheme(!darkTheme)}\n              darkTheme={darkTheme}\n            />\n            <div className=\"app-main\">\n              <Header/>\n              <MainContentRouter/>\n              <TerminalWithRouter \n                open={terminalOpen}\n                closeTerminal={() => setTerminalOpen(false)}\n              />\n            </div>\n        </Router>\n      </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './react/App';\nimport * as serviceWorker from './serviceWorker';\nimport \"../node_modules/@fortawesome/fontawesome-free/css/all.css\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}