{"version":3,"sources":["services/blogService.ts","react/components/markdown.tsx","react/pages/blogPage.tsx","react/components/blog/blogPostPreview.tsx","react/pages/homePage.tsx","react/pages/blogPostPage.tsx","react/pages/projectsPage.tsx","react/pages/interestsPage.tsx","content/links.ts","react/pages/resumePage.tsx","react/pages/booksPage.tsx","react/components/shell/mainContentRouter.tsx","scss/icons.tsx","react/components/shell/sidebar.tsx","services/structureService.ts","react/components/shell/terminal/terminal.tsx","react/components/shell/header.tsx","react/App.tsx","serviceWorker.ts","index.tsx"],"names":["md5","require","BlogService","this","getBlogPosts","postsPreviews","blogPost","data","path","update","title","digest","substr","blogPostId","postsFull","posts","sort","a","b","Date","date","Markdown","props","source","content","linkTarget","escapeHtml","BlogPage","className","getPreviews","map","thumbnail","src","alt","to","toDateString","preview","BlogPostPreview","HomePage","homePage","BlogPostPage","pageProps","match","location","pathname","Error","getFullPost","ProjectsPage","projectsPage","InterestsPage","interestsPage","links","resumeDownload","ResumePage","resumePage","href","BooksPage","booksPage","MainContentRouter","exact","component","icons","home","blog","github","linkedin","resume","tasks","code","education","basketball","volunteer","terminal","sun","moon","trash","book","Sidebar","navLinks","name","icon","externalLinks","link","tools","action","toggleTerminal","item","target","rel","onClick","StructureService","structure","initializeStructure","targetPath","getStructure","Object","keys","children","join","err","structureToPath","startsWith","currentSplit","split","targetSplit","concat","currentStructure","parent","route","projectsStructure","aboutStructure","resumeStructure","about","blogStructure","post","MyTerminal","structureService","commands","echo","description","usage","fn","bind","ls","cd","kill","closeTerminal","getPath","state","open","setState","welcomeMessage","promptLabel","promptLabelStyle","color","noHistory","styles","maxHeight","arguments","Array","from","transformPath","history","push","React","Component","TerminalWithRouter","withRouter","Header","App","useState","isMobile","terminalOpen","setTerminalOpen","darkTheme","setDarkTheme","toggleTheme","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.75e4bb7c.chunk.js","sourcesContent":["\r\nimport postsFull from \"../content/blog/posts-full.json\";\r\nimport postsPreviews from \"../content/blog/posts-preview.json\";\r\nimport { BlogPostMetadata } from \"../models/blog\";\r\nconst md5 = require(\"md5.js\");\r\n\r\nexport class BlogService {\r\n  \r\n  public static getPreviews() {\r\n    return this.getBlogPosts(postsPreviews);\r\n  }\r\n\r\n  public static getBlogPostPath(blogPost: BlogPostMetadata) {\r\n    if (blogPost.data.path) {\r\n      return blogPost.data.path;\r\n    }\r\n    return new md5().update(blogPost.data.title).digest(\"hex\").substr(0, 8);\r\n  }\r\n\r\n  public static getFullPost(blogPostId: string) {\r\n    return (postsFull as { [id: string]: BlogPostMetadata })[blogPostId];\r\n  }\r\n\r\n  private static getBlogPosts(posts: BlogPostMetadata[]): BlogPostMetadata[] {\r\n    return posts\r\n      .sort((a, b) =>\r\n        (new Date(a.data.date) < new Date(b.data.date)) ? 1 : -1\r\n      );\r\n  }\r\n}","import React from \"react\";\r\nimport ReactMarkdown from \"react-markdown\";\r\n\r\nexport interface MarkdownProps {\r\n  content: string;\r\n}\r\n\r\nexport function Markdown(props: MarkdownProps) {\r\n  return (\r\n    <ReactMarkdown\r\n      source={props.content}\r\n      linkTarget=\"_blank\"\r\n      escapeHtml={false}\r\n    />\r\n  )\r\n}","import React from \"react\";\r\nimport { BlogService } from \"../../services/blogService\";\r\nimport { BlogPostPreview } from \"../components/blog/blogPostPreview\";\r\n\r\nexport function BlogPage() {\r\n\r\n  return (\r\n    <div className=\"blog-page\">\r\n      <h1>Blog</h1>\r\n      {BlogService.getPreviews().map((blogPost) => \r\n        <div className=\"blog-page-preview\">\r\n          {BlogPostPreview(blogPost)}\r\n        </div>)}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { BlogPostMetadata } from \"../../../models/blog\";\r\nimport { Markdown } from \"../markdown\";\r\n\r\nexport function BlogPostPreview(blogPost: BlogPostMetadata) {\r\n\r\n  return (\r\n    <div className=\"blog-post-preview\">\r\n      {blogPost.data.thumbnail &&\r\n      <div className=\"blog-post-preview-thumbnail\">\r\n        <img src={`/content/images/${blogPost.data.thumbnail}`} alt=\"\"></img>\r\n      </div>}\r\n      <div className=\"blog-post-preview-title\">\r\n        <NavLink title={blogPost.data.title} to={`/blog/${blogPost.data.path}`} >{blogPost.data.title}</NavLink>\r\n      </div>\r\n      <div>{new Date(blogPost.data.date).toDateString()}</div>\r\n      <div>{blogPost.data.preview}</div>\r\n      <div className=\"blog-post-preview-content\">\r\n        <Markdown \r\n          content={blogPost.content}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from \"react\";\r\nimport homePage from \"../../content/pages/home.json\";\r\nimport ReactMarkdown from \"react-markdown\";\r\n\r\nexport function HomePage() {\r\n  return (\r\n    <div className=\"app-page-home\">\r\n      <ReactMarkdown source={homePage.content} />\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport { PageProps } from \"../../models/generic\";\r\nimport { BlogService } from \"../../services/blogService\";\r\nimport { Markdown } from \"../components/markdown\";\r\n\r\nexport function BlogPostPage(pageProps: PageProps) {\r\n  const match = pageProps.location.pathname.match(/blog\\/(.*)/);\r\n  let blogPostId: string;\r\n  if (match) {\r\n    blogPostId = match[1];\r\n  } else {\r\n    throw new Error(\"Invalid URL\");\r\n  }\r\n  const blogPost = BlogService.getFullPost(blogPostId);\r\n  return (\r\n    <div className=\"blog-post-page\">\r\n      <div className=\"blog-post-page-title\">\r\n        <h1>{blogPost.data.title}</h1>\r\n      </div>\r\n      <div className=\"blog-post-page-date\">\r\n        <h4>{new Date(blogPost.data.date).toDateString()}</h4>\r\n      </div>\r\n      {\r\n        blogPost.data.preview &&\r\n        <div className=\"blog-post-page-preview\">\r\n          {blogPost.data.preview}\r\n        </div>\r\n      }\r\n      <div>{blogPost.data.preview}</div>\r\n      <div className=\"blog-post-page-content\">\r\n        <Markdown \r\n          content={blogPost.content}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from \"react\";\r\nimport projectsPage from \"../../content/pages/projects.json\";\r\nimport ReactMarkdown from \"react-markdown\";\r\n\r\nexport function ProjectsPage() {\r\n  return (\r\n    <div className=\"app-page-projects\">\r\n      <ReactMarkdown source={projectsPage.content} />\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport interestsPage from \"../../content/pages/interests.json\";\r\nimport { Markdown } from \"../components/markdown\";\r\n\r\nexport function InterestsPage() {\r\n  return (\r\n    <div className=\"app-page-about\">\r\n      <Markdown \r\n        content={interestsPage.content} \r\n      />\r\n    </div>\r\n  )\r\n}\r\n","export const links = {\r\n  resumeDownload: \"https://github.com/tbarlow12/tbarlow12.github.io/raw/master/resources/documents/resume.pdf\"\r\n}","import React from \"react\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport resumePage from \"../../content/pages/resume.json\"\r\nimport { links } from \"../../content/links\"\r\n\r\nexport function ResumePage() {\r\n  return (\r\n    <div className=\"app-page-resume\">\r\n      <ReactMarkdown source={resumePage.content} />\r\n      <a href={links.resumeDownload}>Download PDF</a>\r\n    </div>\r\n  )\r\n}","import React from \"react\";\r\nimport booksPage from \"../../content/pages/books.json\";\r\nimport { Markdown } from \"../components/markdown\";\r\n\r\nexport function BooksPage() {\r\n  return (\r\n    <div className=\"app-page-about\">\r\n      <Markdown \r\n        content={booksPage.content} \r\n      />\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { BlogPage } from \"../../pages/blogPage\"\r\nimport { HomePage } from \"../../pages/homePage\";\r\nimport { BlogPostPage } from \"../../pages/blogPostPage\";\r\nimport { ProjectsPage } from \"../../pages/projectsPage\";\r\nimport { InterestsPage } from \"../../pages/interestsPage\";\r\nimport { ResumePage } from \"../../pages/resumePage\";\r\nimport { BooksPage } from \"../../pages/booksPage\";\r\n\r\nexport default function MainContentRouter() {\r\n  return (\r\n    <div className=\"app-main-content\">\r\n      <Switch>\r\n        <Route path=\"/\" exact component={HomePage} />\r\n        <Route path=\"/blog\" exact component={BlogPage} />\r\n        <Route path=\"/blog/:blogPost\" component={BlogPostPage} />\r\n        <Route path=\"/projects\" exact component={ProjectsPage} />\r\n        <Route path=\"/about\" exact component={InterestsPage} />\r\n        <Route path=\"/books\" exact component={BooksPage} />\r\n        <Route path=\"/resume\" exact component={ResumePage} />\r\n        <Route component={HomePage} />\r\n      </Switch>\r\n    </div>\r\n  )\r\n}","export const icons = {\r\n  home: \"fas fa-home\",\r\n  blog: \"fas fa-keyboard\",\r\n  github: \"fab fa-github\",\r\n  linkedin: \"fab fa-linkedin\",\r\n  resume: \"fas fa-file-alt\",\r\n  tasks: \"fas fa-tasks\",\r\n  code: \"fas fa-code-branch\",\r\n  education: \"fas fa-user-graduate\",\r\n  basketball: \"fas fa-basketball-ball\",\r\n  volunteer: \"fas fa-hands-helping\",\r\n  terminal: \"fas fa-terminal\",\r\n  sun: \"fas fa-sun\",\r\n  moon: \"fas fa-moon\",\r\n  trash: \"far fa-trash-alt\",\r\n  book: \"fas fa-book\",\r\n}","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { icons } from \"../../../scss/icons\";\r\n\r\n\r\nexport interface SidebarProps {\r\n  toggleTerminal: () => void;\r\n  toggleTheme: () => void;\r\n  darkTheme: boolean;\r\n}\r\n\r\nexport interface SidebarItem {\r\n  name: string;\r\n  icon: string;\r\n}\r\n\r\nexport interface SidebarNavLink extends SidebarItem {\r\n  path: string;\r\n}\r\n\r\nexport interface SidebarExternalLink extends SidebarItem {\r\n  link: string;\r\n}\r\n\r\nexport interface SidebarTool extends SidebarItem {\r\n  action: () => void;\r\n}\r\n\r\n\r\nexport function Sidebar(props: SidebarProps) {\r\n\r\n  const navLinks: SidebarNavLink[] = [\r\n    {\r\n      name: \"Home\",\r\n      path: \"/\",\r\n      icon: icons.home\r\n    },\r\n    {\r\n      name: \"Home\",\r\n      path: \"/blog\",\r\n      icon: icons.blog\r\n    },\r\n    {\r\n      name: \"Projects\",\r\n      path: \"/projects\",\r\n      icon: icons.code\r\n    },\r\n    {\r\n      name: \"Resume\",\r\n      path: \"/resume\",\r\n      icon: icons.resume,\r\n    },\r\n    {\r\n      name: \"About\",\r\n      path: \"/about\",\r\n      icon: icons.basketball,\r\n    },\r\n    {\r\n      name: \"Favorite Books\",\r\n      path: \"/books\",\r\n      icon: icons.book,\r\n    }\r\n  ]\r\n\r\n  const externalLinks: SidebarExternalLink[] = [\r\n    {\r\n      name: \"GitHub\",\r\n      link: \"https://github.com/tbarlow12\",\r\n      icon: icons.github\r\n    },\r\n    {\r\n      name: \"LinkedIn\",\r\n      link: \"https://www.linkedin.com/in/tannerbarlow/\",\r\n      icon: icons.linkedin\r\n    },\r\n  ]\r\n\r\n  const tools: SidebarTool[] = [\r\n    {\r\n      name: \"Terminal\",\r\n      icon: icons.terminal,\r\n      action: props.toggleTerminal\r\n    }\r\n  ]\r\n\r\n  // if (props.darkTheme) {\r\n  //   tools.push({\r\n  //     name: \"Light Theme\",\r\n  //     icon: icons.sun,\r\n  //     action: props.toggleTheme\r\n  //   })\r\n  // } else {\r\n  //   tools.push({\r\n  //     name: \"Dark Theme\",\r\n  //     icon: icons.moon,\r\n  //     action: props.toggleTheme\r\n  //   })\r\n  // }\r\n\r\n  return (\r\n    <ul className=\"app-sidebar\">\r\n      <div className=\"app-sidebar-links\">\r\n        {navLinks.map((item) =>\r\n          <li className=\"app-sidebar-item\">\r\n            <NavLink to={item.path}>\r\n              <i className={`app-sidebar-item-icon ${item.icon}`}></i>\r\n            </NavLink>\r\n          </li>)\r\n        }\r\n        {externalLinks.map((item) =>\r\n          <li className=\"app-sidebar-item\">\r\n            <a href={item.link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n              <i className={`app-sidebar-item-icon ${item.icon}`}></i>\r\n            </a>\r\n          </li>)\r\n        }\r\n      </div>\r\n      <div className=\"app-sidebar-tools\">\r\n        {tools.map((item) =>\r\n          <li className=\"app-sidebar-item\" onClick={() => item.action()}>\r\n            <i className={`app-sidebar-item-icon ${item.icon}`}></i>\r\n          </li>)\r\n        }\r\n      </div>      \r\n    </ul>\r\n  )\r\n}","import postsFull from \"../content/blog/posts-full.json\";\r\n\r\nexport interface Structure {\r\n  route: string;\r\n  children: {\r\n    [id: string]: Structure,\r\n  };\r\n  parent?: Structure;\r\n}\r\n\r\nexport class StructureService {\r\n\r\n  private structure: Structure;\r\n\r\n  public constructor() {\r\n    this.structure = this.initializeStructure();\r\n  }\r\n\r\n  public ls(pathname: string, targetPath?: string): string {\r\n    try {\r\n      const structure = this.getStructure(pathname, targetPath);\r\n      return Object.keys(structure.children).join(\" \");\r\n    } catch (err) {\r\n      return `Invalid command ${err}`;\r\n    }\r\n  }\r\n\r\n  public transformPath(pathname: string, targetPath: string): string {\r\n    const structure = this.getStructure(pathname, targetPath);\r\n    return this.structureToPath(structure);\r\n  }\r\n\r\n  private getStructure(pathname: string, targetPath?: string) {\r\n    if (targetPath === \"~\") {\r\n      return this.structure;\r\n    }\r\n    if (targetPath && targetPath.startsWith(\"~/\")) {\r\n      pathname = \"\";\r\n      targetPath = targetPath.substr(2);\r\n    }\r\n    let currentSplit = pathname.split(\"/\");\r\n    const targetSplit = (targetPath) ? targetPath.split(\"/\") : []\r\n    \r\n    currentSplit = currentSplit.concat(targetSplit);\r\n\r\n    let currentStructure = this.structure;\r\n\r\n    for (const path of currentSplit) {\r\n      if (path === \"..\") {\r\n        if (!currentStructure.parent) {\r\n          throw new Error(`Invalid path: ${pathname + targetPath}`);\r\n        }\r\n        currentStructure = currentStructure.parent;\r\n      }\r\n      if (currentStructure.children[path]) {\r\n        currentStructure = currentStructure.children[path]\r\n      }\r\n    }\r\n    return currentStructure;\r\n  }\r\n\r\n  private structureToPath(structure: Structure): string {\r\n    return (structure.parent) \r\n      ? this.structureToPath(structure.parent) + structure.route\r\n      : structure.route\r\n  }\r\n\r\n  private initializeStructure(): Structure {\r\n    const structure: Structure = {\r\n      route: \"\",\r\n      children: {}\r\n    }\r\n\r\n    const projectsStructure: Structure =  {\r\n      route: \"/projects\",\r\n      children: {},\r\n      parent: structure\r\n    }\r\n\r\n    const aboutStructure: Structure =  {\r\n      route: \"/about\",\r\n      children: {},\r\n      parent: structure\r\n    }\r\n\r\n    const resumeStructure: Structure = {\r\n      route: \"/resume\",\r\n      children: {},\r\n      parent: structure\r\n    }\r\n\r\n    structure.children[\"projects\"] = projectsStructure;\r\n    structure.children.about = aboutStructure;\r\n    structure.children[\"resume\"] = resumeStructure;\r\n\r\n    const blogStructure: Structure = {\r\n      route: \"/blog\",\r\n      children: {},\r\n      parent: structure\r\n    }\r\n\r\n    for (const post of Object.keys(postsFull)) {\r\n      blogStructure.children[post] = {\r\n        route: `/${post}`,\r\n        children: {},\r\n        parent: blogStructure\r\n      }\r\n    }\r\n    structure.children.blog = blogStructure\r\n    return structure;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Terminal from \"react-console-emulator\";\r\nimport { RouteComponentProps, withRouter } from \"react-router\";\r\nimport { StructureService } from \"../../../../services/structureService\";\r\nimport { icons } from \"../../../../scss/icons\";\r\n\r\nexport interface MyTerminalProps extends RouteComponentProps {\r\n  open: boolean;\r\n  closeTerminal: () => void;\r\n}\r\n\r\nexport interface MyTerminalState {\r\n  open: boolean;\r\n}\r\n\r\nexport default class MyTerminal extends React.Component<MyTerminalProps, MyTerminalState> {\r\n\r\n  private structureService: StructureService;\r\n\r\n  public constructor(props: MyTerminalProps) {\r\n    super(props);\r\n    this.structureService = new StructureService();\r\n    this.state = {\r\n      open: props.open\r\n    }\r\n  }\r\n\r\n  public componentDidUpdate() {\r\n    if (this.props.open !== this.state.open) {\r\n      this.setState({\r\n        open: this.props.open\r\n      })\r\n    }\r\n  }\r\n\r\n  commands = {\r\n    echo: {\r\n      description: \"Echo a passed string.\",\r\n      usage: \"echo <string>\",\r\n      fn: this.echo.bind(this)\r\n    },\r\n    ls: {\r\n      description: \"View available navigation options\",\r\n      usage: \"ls\",\r\n      fn: this.ls.bind(this)\r\n    },\r\n    cd: {\r\n      description: \"Navigate to another page\",\r\n      usage: \"cd <string>\",\r\n      fn: this.cd.bind(this)\r\n    },\r\n    kill: {\r\n      description: \"Close terminal\",\r\n      usage: \"kill\",\r\n      fn: this.props.closeTerminal,\r\n    }\r\n  }\r\n\r\n  render () {\r\n\r\n    const { location } = this.props;\r\n    \r\n    return (\r\n      <div className=\"app-main-footer\">\r\n        {this.props.open && <div className=\"app-main-footer-container\">\r\n          <div className=\"app-main-footer-header\">\r\n            <div className=\"app-main-footer-header-tabs\">\r\n              <div className=\"app-main-footer-header-tabs-title\">TERMINAL</div>\r\n            </div>\r\n            <div className=\"app-main-footer-header-tools\">\r\n              <div className=\"app-main-footer-header-tools-trash\">\r\n                <i className={`${icons.trash}`} onClick={this.props.closeTerminal}></i>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <Terminal\r\n            commands={this.commands}\r\n            welcomeMessage={\"Welcome to my website! Run help for available commands\"}\r\n            promptLabel={`user@TBarlow:${this.getPath(location.pathname)}`}\r\n            promptLabelStyle={{color: \"#66CCCC\"}}\r\n            noHistory={true}\r\n            styles={{\r\n              maxHeight: \"300px\",\r\n            }}\r\n          />\r\n        </div>}        \r\n      </div>\r\n    )\r\n  }\r\n\r\n  ls() {\r\n    const { pathname } = this.props.location;\r\n    const target = arguments[0];\r\n    return this.structureService.ls(pathname, target);\r\n  }\r\n\r\n  echo() {\r\n    return `${Array.from(arguments).join(\" \")}`\r\n  }\r\n\r\n  cd () {\r\n    const target = arguments[0];\r\n    const location = this.props.location;\r\n    try {\r\n      const path = this.structureService.transformPath(location.pathname, target);\r\n      this.props.history.push(path)\r\n    } catch {\r\n      return `Invalid path: ${location.pathname + target}`\r\n    }\r\n  }\r\n\r\n  getPath = (pathname: string) => {\r\n    if (pathname === \"/\") {\r\n      return \"~\"\r\n    }\r\n    return `~${pathname}`;\r\n  }\r\n}\r\n\r\nexport const TerminalWithRouter = withRouter(MyTerminal);","import React from \"react\";\r\n\r\nexport function Header() {\r\n  return (\r\n    <div className=\"app-main-header\">\r\n      {/* <div className=\"icon\">\r\n        <a href=\"/\">\r\n          <img src=\"/resources/images/TannerPic.jpg\" alt=\"\"/>\r\n        </a>\r\n      </div> */}\r\n      <div className=\"app-main-header-title\">\r\n        <h1>Tanner Barlow</h1>\r\n      </div>\r\n      <div className=\"app-main-header-subtitle\"></div>\r\n    </div>\r\n  )\r\n}","import React, { useState } from 'react';\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport '../scss/App.css';\r\nimport \"../scss/App.scss\";\r\nimport MainContentRouter from \"./components/shell/mainContentRouter\";\r\nimport { Sidebar } from \"./components/shell/sidebar\";\r\nimport { TerminalWithRouter } from './components/shell/terminal/terminal';\r\nimport { isMobile } from \"react-device-detect\"\r\nimport { Header } from './components/shell/header';\r\n\r\nconst App: React.FC = () => {\r\n  \r\n  const [terminalOpen, setTerminalOpen] = useState(!isMobile)\r\n  const [darkTheme, setDarkTheme] = useState(true);\r\n\r\n  return (\r\n      <div className={`app`}>\r\n        <HashRouter>\r\n            <Sidebar\r\n              toggleTerminal={() => setTerminalOpen(!terminalOpen)}\r\n              toggleTheme={() => setDarkTheme(!darkTheme)}\r\n              darkTheme={darkTheme}\r\n            />\r\n            <div className=\"app-main\">\r\n              <Header/>\r\n              <MainContentRouter/>\r\n              <TerminalWithRouter \r\n                open={terminalOpen}\r\n                closeTerminal={() => setTerminalOpen(false)}\r\n              />\r\n            </div>\r\n        </HashRouter>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './react/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport \"../node_modules/@fortawesome/fontawesome-free/css/all.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}